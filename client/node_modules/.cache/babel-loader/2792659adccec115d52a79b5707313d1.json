{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blogweb\\\\client\\\\src\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { InputGroup, InputLeftAddon, Input, FormControl, Stack, Button, FormLabel, Switch } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { EmailIcon, LockIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  _s();\n\n  const [formValues, setFormValues] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    axios.post(\"/login\", formValues).then(response => {\n      localStorage.setItem(\"token\", response.data.token);\n      window.location = \"/create\";\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        isRequired: true,\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n            children: /*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            bg: \"gray.50\",\n            type: \"email\",\n            placeholder: \"Email\",\n            \"aria-label\": \"Email input field\",\n            value: formValues.email,\n            id: \"email\",\n            name: \"email\",\n            onChange: event => {\n              setFormValues({ ...formValues,\n                [event.target.name]: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        isRequired: true,\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n            children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            bg: \"gray.50\",\n            type: \"password\",\n            placeholder: \"Password\",\n            \"aria-label\": \"Password input field\",\n            value: formValues.password,\n            id: \"password\",\n            name: \"password\",\n            onChange: event => {\n              setFormValues({ ...formValues,\n                [event.target.name]: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"email-alerts\",\n          mb: \"0\",\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          id: \"email-alerts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        boxShadow: \"md\",\n        _active: {\n          boxShadow: \"lg\"\n        },\n        type: \"submit\",\n        bg: \"gray.200\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/forgot\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"fc4jaLho+MBAhZfZ8dz4HurHKx8=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["D:/Blogweb/client/src/components/LoginForm.js"],"names":["useState","useEffect","InputGroup","InputLeftAddon","Input","FormControl","Stack","Button","FormLabel","Switch","axios","EmailIcon","LockIcon","Link","LoginForm","props","formValues","setFormValues","email","password","handleSubmit","event","preventDefault","post","then","response","localStorage","setItem","data","token","window","location","catch","error","console","log","target","name","value","boxShadow"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  InputGroup,\n  InputLeftAddon,\n  Input,\n  FormControl,\n  Stack,\n  Button,\n  FormLabel,\n  Switch,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { EmailIcon, LockIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\n\nconst LoginForm = (props) => {\n  const [formValues, setFormValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    axios\n      .post(\"/login\", formValues)\n      .then((response) => {\n        localStorage.setItem(\"token\", response.data.token);\n        window.location = \"/create\";\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <Stack spacing={3}>\n        <FormControl isRequired>\n          <InputGroup>\n            <InputLeftAddon children={<EmailIcon />} />\n            <Input\n              bg=\"gray.50\"\n              type=\"email\"\n              placeholder=\"Email\"\n              aria-label=\"Email input field\"\n              value={formValues.email}\n              id=\"email\"\n              name=\"email\"\n              onChange={(event) => {\n                setFormValues({\n                  ...formValues,\n                  [event.target.name]: event.target.value,\n                });\n              }}\n            />\n          </InputGroup>\n        </FormControl>\n        <FormControl isRequired>\n          <InputGroup>\n            <InputLeftAddon children={<LockIcon />} />\n            <Input\n              bg=\"gray.50\"\n              type=\"password\"\n              placeholder=\"Password\"\n              aria-label=\"Password input field\"\n              value={formValues.password}\n              id=\"password\"\n              name=\"password\"\n              onChange={(event) => {\n                setFormValues({\n                  ...formValues,\n                  [event.target.name]: event.target.value,\n                });\n              }}\n            />\n          </InputGroup>\n        </FormControl>\n        <FormControl display=\"flex\" alignItems=\"center\">\n          <FormLabel htmlFor=\"email-alerts\" mb=\"0\">\n            Remember me\n          </FormLabel>\n          <Switch id=\"email-alerts\" />\n        </FormControl>\n        <Button\n          boxShadow=\"md\"\n          _active={{ boxShadow: \"lg\" }}\n          type=\"submit\"\n          bg=\"gray.200\"\n        >\n          Login\n        </Button>\n        <Link to=\"/forgot\">Forgot Password?</Link>\n      </Stack>\n    </form>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}